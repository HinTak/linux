#ifndef __MACH_MOTHERBOARD_H
#define __MACH_MOTHERBOARD_H

// NVT 668 CORE JUMP DDRESS ; base on 0xFD020000  
#define NVTCORE0_JUMP_OFFSET     (0x0124)              
#define NVTCORE1_JUMP_OFFSET     (0x0128) 
#define NVTCORE2_JUMP_OFFSET     (0x012C)
#define NVTCORE3_JUMP_OFFSET     (0x0130)

/*
 * for watch dog timer
 */
#define FLAG_EVENT              (0x00000001)
#define FLAG_IT_ENABLE          (0x00000004)
#define FLAG_AUTO_RELOAD        (0x00000002)
#define FLAG_TIMER_ENABLE       (0x00000001)
#define FLAG_TIMER_PRESCALAR    (0x00000000)
/*
 * for external timer
 */
#define FLAG_ExtTIMER_ENABLE    (0x00000080U)
#define FLAG_ExtTIMER_PERIOD    (0x00000000)


#define CPU_CEASE(var) \
	      __asm__ __volatile__( \
                       "MCR p14, 0, %0, c0, c4, 2\n\t" \
                           : \
                           : "r"(var));

/*
 * this function returns chip ID of the underlying SoC
 */
#define CHIP_ID_REG 		(0xfd020100)
#define EN_SOC_NT72656      (0x0656)
#define EN_SOC_NT72668		(0x0668)
#define EN_SOC_NONE			(0xdeadbeef)	

/* 
 * usb parameters
 */
#define NVT_USB0_BASE  (0xFC1F0000)
#define NVT_USB1_BASE  (0xFC000000)
#define NVT_USB2_BASE  (0xFC140000)
#define NVT_USB3_BASE  (0xFC1A0000)
#define NVT_USB4_BASE  (0xFC200000)
      
      
#define NVT_USB0_APB_BASE  (0xFD170000)       
#define NVT_USB1_APB_BASE  (0xFD178000)       
#define NVT_USB2_APB_BASE  (0xFD180000)       
#define NVT_USB3_APB_BASE  (0xFD184000)       
#define NVT_USB4_APB_BASE  (0xFD188000)       

/*
 * for suspend/resume
 */
#define NT72668_IMVQ_REMAP_BASE		0xfd0d0c04 
#define NT72668_IMVQ_REMAP_BASE_LOW	(NT72668_IMVQ_REMAP_BASE & 0x0000ffff)
#define NT72668_IMVQ_REMAP_BASE_HIGH	((NT72668_IMVQ_REMAP_BASE & 0xffff0000)>>16)
#define NT72668_IMVQ_SRAM_BASE		0xfc130000
#define NT72668_IMVQ_SRAM_BASE_LOW	(NT72668_IMVQ_SRAM_BASE & 0x0000ffff)
#define NT72668_IMVQ_SRAM_BASE_HIGH	((NT72668_IMVQ_SRAM_BASE & 0xffff0000)>>16)

#define NT72668_DMA_CTRL_BASE		0xfc090000
#define NT72668_DMA_SRC_BASE_OFFSET	0x0
#define NT72668_DMA_DEST_BASE_OFFSET	0x4
#define NT72668_DMA_SIZE_BASE_OFFSET	0x8
#define NT72668_DMA_MODE_BASE_OFFSET	0x18
#define NT72668_DMA_ENABLE_BASE_OFFSET	0x20
#define NT72668_DMA_INT_BASE_OFFSET	0x24
#define NT72668_DMA_MODE_BLK_2_BLK	0x0
#define	NT72668_DMA_ENABLE		0x1
#define NT72668_DMA_FINISH		0x1	
   	
#define NT72668_REGION1_BASE		0x24000000
#define	NT72668_REGION1_BACKUP_BASE	0x23B00000
#define NT72668_REGION1_BACKUP_SIZE	(0x24000000 - 0x23B00000)
#define NT72668_REGION2_BASE		0x80000000
#define	NT72668_REGION2_BACKUP_BASE	0x23000000
#define NT72668_REGION2_BACKUP_SIZE	(0x500000)

/*
 * STBC commands
 */
#define NT72668_IPC_KEY_PASS_0		0x72682
#define NT72668_IPC_KEY_PASS_1		0x28627
#define NT72668_IPC_KEY_PASS_2		0x1  
#define NT72668_AUTO_POWERON_SECONDS	10
#define NT72668_IPC_AUTO_POWERON_REQ	(0xc6010000 + (NT72668_AUTO_POWERON_SECONDS & 0x0000ffff))
#define NT72668_IPC_AUTO_POWERON_RES	0xf1c60000
#define NT72668_IPC_SLEEP_REQ		0x25000000

#define MICOM_CMD_SIZE			9
#define	MICOM_REQ_POWER_OFF		0x12
#define	MICOM_REQ_SLEEP			0x25

#define NT72668_UARTx_RBR		0x00
#define NT72668_UARTx_DLAB0		0x00
#define NT72668_UARTx_DLAB1		0x04
#define NT72668_UARTx_FCR		0x08
#define NT72668_UARTx_LCR		0x0C
#define NT72668_UARTx_LSR 		0x14
#define NT72668_UART_LSR_TXEMPTY	0x40
#define NT72668_UART_LSR_THREMPTY	0x20
#define NT72668_UART_LSR_DATAREADY	0x01
#define NT72668_UART0_BASE		0xfd090000
#define NT72668_UART0_BASE_LOW	(NT72668_UART0_BASE & 0x0000ffff)
#define NT72668_UART0_BASE_HIGH	((NT72668_UART0_BASE & 0xffff0000)>>16)
#define NT72668_UART1_BASE		0xfd091000
#define NT72668_UART1_BASE_LOW	(NT72668_UART1_BASE & 0x0000ffff)
#define NT72668_UART1_BASE_HIGH	((NT72668_UART1_BASE & 0xffff0000)>>16)

#define NT72668_MAU0_STATUS		0xfd010040
#define NT72668_MAU0_STATUS_LOW	(NT72668_MAU0_STATUS & 0x0000ffff)
#define NT72668_MAU0_STATUS_HIGH	((NT72668_MAU0_STATUS & 0xffff0000)>>16)
#define NT72668_MAU1_STATUS		0xfd0e0040
#define NT72668_MAU1_STATUS_LOW	(NT72668_MAU1_STATUS & 0x0000ffff)
#define NT72668_MAU1_STATUS_HIGH	((NT72668_MAU1_STATUS & 0xffff0000)>>16)

#endif
